<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:icons="https://github.com/projektanker/icons.avalonia"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:iac="clr-namespace:Avalonia.Xaml.Interactions.Custom;assembly=Avalonia.Xaml.Interactions.Custom"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="TestingEO.Views.ControlPTZView"
             >

    <StackPanel Classes="V" HorizontalAlignment="Stretch" >
        <StackPanel Classes="H">
        <Label Content="Camera: " />
        <ComboBox Name="Camera" SelectedIndex="0" MinWidth="120" >
            <ComboBoxItem Content="Day" />
            <ComboBoxItem Content="IR" />
        </ComboBox>
        </StackPanel>
        <Grid ColumnDefinitions="Auto,Auto,*,Auto" RowDefinitions="*,*,*">
            <Grid.Styles>
                <Style Selector="RepeatButton">
                <Setter Property="Interval" Value="1000" />
                </Style>
            </Grid.Styles>
            <!-- Zoom -->
            <Label  Grid.Row="0" Grid.Column="0" Content="Zoom" />
            <Button Grid.Row="0" Grid.Column="1" icons:Attached.Icon="mdi-minus-circle" Command="{Binding PelcoPTZCommand}" >
                <Button.CommandParameter>
                    <MultiBinding StringFormat="Zoom_Wide@CamId={0}@Minus">
                        <Binding Path="#Camera.SelectedIndex" />
                    </MultiBinding>
                </Button.CommandParameter>
            </Button>

            <Slider Name="ZoomV" Grid.Row="0" Grid.Column="2" Minimum="0" Maximum="65535" SmallChange="1" IsSnapToTickEnabled="True" TickFrequency="1" Value="{Binding ZoomLevel, Mode=OneWayToSource}" >
<!--
                <i:Interaction.Behaviors>
                    <iac:ValueChangedTriggerBehavior Binding="{Binding $self.Value}">
                        <ia:InvokeCommandAction Command="{Binding PelcoPTZCommand}" >
                            <ia:InvokeCommandAction.CommandParameter>
                                <MultiBinding StringFormat="Zoom@CamId={0}@{1}">
                                    <Binding Path="#Camera.SelectedIndex" />
                                    <Binding Path="$self.Value" />
                                </MultiBinding>
                            </ia:InvokeCommandAction.CommandParameter>
                        </ia:InvokeCommandAction>
                    </iac:ValueChangedTriggerBehavior>
                </i:Interaction.Behaviors>
 -->
            </Slider>

            <Button Grid.Row="0" Grid.Column="3" icons:Attached.Icon="mdi-plus-circle" Command="{Binding PelcoPTZCommand}" >
                <Button.CommandParameter>
                    <MultiBinding StringFormat="Zoom_Tele@CamId={0}@Plus">
                        <Binding Path="#Camera.SelectedIndex" />
                    </MultiBinding>
                </Button.CommandParameter>
            </Button>

            <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding #ZoomV.Value}">
                <i:Interaction.Behaviors>
                    <iac:ValueChangedTriggerBehavior Binding="{Binding $self.Text}">
                        <ia:InvokeCommandAction Command="{Binding PelcoPTZCommand}" >
                            <ia:InvokeCommandAction.CommandParameter>
                                <MultiBinding StringFormat="Zoom@CamId={0}@{1}">
                                    <Binding Path="#Camera.SelectedIndex" />
                                    <Binding Path="$self.Text" />
                                </MultiBinding>
                            </ia:InvokeCommandAction.CommandParameter>
                        </ia:InvokeCommandAction>
                    </iac:ValueChangedTriggerBehavior>
                </i:Interaction.Behaviors>
            </TextBox>
        </Grid>
    </StackPanel>

</UserControl>